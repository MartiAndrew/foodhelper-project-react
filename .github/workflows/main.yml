name: Foodhelper Workflow

on:
  push:
    branches:
      - master

jobs:
  build_backend_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodhelper_backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodhelper_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "foodhelper"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        env:
          DOCKER_LOGIN: ${{ secrets.DOCKER_USERNAME }}
          NGINX_PORT: 8080
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodhelper
            # Чистим кэш
            sudo docker system prune -a --force
            sudo apt-get clean
            sudo journalctl --vacuum-size=100M
            sudo journalctl --vacuum-time=1d
            sudo journalctl --vacuum-files=10

            # Вып-ет pull образов с Docker Hub
            sudo docker-compose -f docker-compose.production.yml pull
            # Перезапускает все контейнеры в Docker Compose
            sudo docker-compose -f docker-compose.production.yml down
            sudo docker-compose -f docker-compose.production.yml up -d
            # Выполняет миграции и сбор статики
            sudo docker-compose exec backend python manage.py makemigrations
            sudo docker-compose exec backend python manage.py migrate --noinput
            sudo docker-compose exec backend python manage.py collectstatic --no-input
            sudo docker-compose exec backend python manage.py import_csv

  send_message:
    name: Send message to telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Foodhelper успешно задеплоин!